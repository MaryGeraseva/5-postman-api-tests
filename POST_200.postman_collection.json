{
	"info": {
		"_postman_id": "9a0a9721-5b3c-433c-aec7-6cd4060eee09",
		"name": "POST_200",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Store endpoint POST future shipDate status 200 test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5389fd79-e65e-4f8d-b557-0db6c9d4bc1d",
						"exec": [
							"//1.Create future date ",
							"var moment = require('moment');",
							"pm.environment.set(\"date\", moment().add(10, \"days\").format(\"YYYY-MM-DD\"));",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ba359d46-3ad3-4aa8-b24f-b0ecc5d1a299",
						"exec": [
							"//1.Checking status code",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2.Checking response message",
							"pm.test(\"Status message is \\\"OK\\\"\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"//3.Cheking shipDate value",
							"pm.test(\"ShipDate value is valid\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.shipDate).to.include(pm.environment.get(\"date\"));",
							"});",
							"",
							"console.log(\"request body is:\" + request.data.toString().replace(/\\r\\n/g, \"\"));",
							"console.log(\"response body is: \" + responseBody);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"type": "text",
						"value": "maryTest062019"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"petId\": {{$randomInt}},\r\n  \"quantity\": {{$randomInt}},\r\n  \"shipDate\": \"{{date}}\",\r\n  \"status\": \"plased\",\r\n  \"complete\": {{$randomBoolean}}\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				},
				"description": "POST request tests with valid data and required headers.\r\nTest data are generated automatically.\r\nExpected status code 200, message \"OK\" and response body"
			},
			"response": []
		},
		{
			"name": "Store endpoint POST case sensitive 200 test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "32174fec-f338-4ba9-8400-2169385870e1",
						"exec": [
							"//1.Create current date ",
							"var moment = require('moment');",
							"pm.environment.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));",
							"",
							"//2.Create data scope for status field",
							"var statuses = pm.environment.get(\"statuses\");",
							"",
							"if (!statuses) {",
							"    statuses = [\"PLASED\", \"APPROVED\", \"DELIVERED\"]",
							"} ",
							"",
							"var currentStatus = statuses.shift();",
							"",
							"pm.environment.set(\"status\", currentStatus);",
							"pm.environment.set(\"statuses\", statuses);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77a505f3-fa38-492d-ac2b-8ca4f086125f",
						"exec": [
							"//1.Making request while arrays have data",
							"var statuses = pm.environment.get(\"statuses\");",
							"",
							"if (statuses && statuses.length > 0) {",
							"    postman.setNextRequest('Store endpoint POST case sensitive 200 test');",
							"} else {",
							"     postman.setNextRequest(null);",
							"}",
							"",
							"//2.Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//3.Checking response message",
							"pm.test(\"Status message is \\\"OK\\\"\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"//3.Checking status case sensitive",
							"pm.test(\"Checking status case sensitive\", function () {",
							"    const jsonData = pm.response.json();",
							"    var requestStatus = String(pm.environment.get(\"status\")).toLowerCase(); ",
							"    pm.expect(jsonData.status).to.eql(requestStatus);",
							"});",
							"",
							"",
							"console.log(\"request body is:\" + request.data.toString().replace(/\\r\\n/g, \"\"));",
							"console.log(\"response body is: \" + responseBody);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"type": "text",
						"value": "maryTest062019"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"petId\": {{$randomInt}},\r\n  \"quantity\": {{$randomInt}},\r\n  \"shipDate\": \"{{currentDate}}\",\r\n  \"status\": \"{{status}}\",\r\n  \"complete\": {{$randomBoolean}}\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				},
				"description": "POST request tests with valid data and required headers.\r\nTest checks status field case sensitive.\r\nTest data are generated automatically.\r\nExpected status code 200, message \"OK\" and response body"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1c2ff92a-4a2d-43ac-8f00-19bba4f4c1e6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "22ab7f67-458e-4848-9ed5-cfd0f6108645",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}